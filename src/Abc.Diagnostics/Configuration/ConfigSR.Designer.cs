//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

#if !NETSTANDARD
namespace Abc.Diagnostics.Configuration {
    using System;

	///<summary>
	/// Provides access to resource key names for the ConfigSR resource file.
	///</summary>
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal sealed class ConfigSR {
		private static global::System.Resources.ResourceManager resourceManager;
		private static global::System.Globalization.CultureInfo resourceCulture;

		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal ConfigSR() {
		}

		/// <summary>
		/// Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceManager, null)) {
#if NET20 || NET30 || NET35 || NET40
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Diagnostic.Configuration.ConfigSR", typeof(ConfigSR).Assembly);
#else
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Abc.Diagnostics.Configuration.ConfigSR", typeof(ConfigSR).Assembly);
#endif
					resourceManager = temp;
				}
				return resourceManager;
			}
		}
        
		/// <summary>
		/// Overrides the current thread's CurrentUICulture property for all
		/// resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}

		/// <summary>
		/// Looks up a localized string similar to &apos;{0}&apos; is not a valid configuration attribute for type &apos;{1}&apos;..
		/// </summary>
		internal static string ConfigAttributeNotSupported {
			get {
				return ResourceManager.GetString("ConfigAttributeNotSupported", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to Could not create &apos;{0}&apos;..
		/// </summary>
		internal static string ConfigCouldNotCreateTypeInstance {
			get {
				return ResourceManager.GetString("ConfigCouldNotCreateTypeInstance", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to Couldn&apos;t find type for class &apos;{0}&apos;..
		/// </summary>
		internal static string ConfigCouldNotFindType {
			get {
				return ResourceManager.GetString("ConfigCouldNotFindType", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to Couldn&apos;t find constructor for class &apos;{0}&apos;..
		/// </summary>
		internal static string ConfigCouldNotGetConstructor {
			get {
				return ResourceManager.GetString("ConfigCouldNotGetConstructor", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to switchType needs to be a valid class name. It can&apos;t be empty..
		/// </summary>
		internal static string ConfigEmptyTypeNameNotAllowed {
			get {
				return ResourceManager.GetString("ConfigEmptyTypeNameNotAllowed", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to The specified type, &apos;{0}&apos; is not derived from the appropriate base type, &apos;{1}&apos;..
		/// </summary>
		internal static string ConfigIncorrectBaseType {
			get {
				return ResourceManager.GetString("ConfigIncorrectBaseType", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to Couldn&apos;t find type for factory &apos;{0}&apos;..
		/// </summary>
		internal static string ConfigurationCouldNotFindType {
			get {
				return ResourceManager.GetString("ConfigurationCouldNotFindType", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to The specified type, &apos;{0}&apos; is not derived from the appropriate base type, &apos;{1}&apos;..
		/// </summary>
		internal static string ConfigurationIncorrectBaseType {
			get {
				return ResourceManager.GetString("ConfigurationIncorrectBaseType", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to There was an error loading the {0} configuration section..
		/// </summary>
		internal static string ConfigurationSectionError {
			get {
				return ResourceManager.GetString("ConfigurationSectionError", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to There was an error loading the &apos;{0}&apos; configuration section group..
		/// </summary>
		internal static string ConfigurationSectionGroupError {
			get {
				return ResourceManager.GetString("ConfigurationSectionGroupError", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to The &apos;{0}&apos; configuration section handler has not finished initializing..
		/// </summary>
		internal static string ConfigurationSectionGroupNotInitialized {
			get {
				return ResourceManager.GetString("ConfigurationSectionGroupNotInitialized", resourceCulture);
			}
		}

		/// <summary>
		/// Looks up a localized string similar to An unexpected threading error occurred while parsing configuration..
		/// </summary>
		internal static string ConfigurationThreadingError {
			get {
				return ResourceManager.GetString("ConfigurationThreadingError", resourceCulture);
			}
		}

        /// <summary>
        /// Formats a localized string similar to Could not create &apos;{0}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigCouldNotCreateTypeInstanceFormat(object arg0) {
            return string.Format(resourceCulture, ConfigCouldNotCreateTypeInstance, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to Couldn&apos;t find type for class &apos;{0}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigCouldNotFindTypeFormat(object arg0) {
            return string.Format(resourceCulture, ConfigCouldNotFindType, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to Couldn&apos;t find constructor for class &apos;{0}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigCouldNotGetConstructorFormat(object arg0) {
            return string.Format(resourceCulture, ConfigCouldNotGetConstructor, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to Couldn&apos;t find type for factory &apos;{0}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationCouldNotFindTypeFormat(object arg0) {
            return string.Format(resourceCulture, ConfigurationCouldNotFindType, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to There was an error loading the {0} configuration section..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationSectionErrorFormat(object arg0) {
            return string.Format(resourceCulture, ConfigurationSectionError, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to There was an error loading the &apos;{0}&apos; configuration section group..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationSectionGroupErrorFormat(object arg0) {
            return string.Format(resourceCulture, ConfigurationSectionGroupError, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to The &apos;{0}&apos; configuration section handler has not finished initializing..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationSectionGroupNotInitializedFormat(object arg0) {
            return string.Format(resourceCulture, ConfigurationSectionGroupNotInitialized, arg0);
        }

        /// <summary>
        /// Formats a localized string similar to &apos;{0}&apos; is not a valid configuration attribute for type &apos;{1}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigAttributeNotSupportedFormat(object arg0, object arg1) {
            return string.Format(resourceCulture, ConfigAttributeNotSupported, arg0, arg1);
        }

        /// <summary>
        /// Formats a localized string similar to The specified type, &apos;{0}&apos; is not derived from the appropriate base type, &apos;{1}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigIncorrectBaseTypeFormat(object arg0, object arg1) {
            return string.Format(resourceCulture, ConfigIncorrectBaseType, arg0, arg1);
        }

        /// <summary>
        /// Formats a localized string similar to The specified type, &apos;{0}&apos; is not derived from the appropriate base type, &apos;{1}&apos;..
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationIncorrectBaseTypeFormat(object arg0, object arg1) {
            return string.Format(resourceCulture, ConfigurationIncorrectBaseType, arg0, arg1);
        }

	}
} 
#endif

